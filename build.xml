<!-- Build file fuer die Rest-API -->
<project name="restapi" basedir="." default="compile">

	<property environment="env"/>
	<property file="build.properties.local"/>
	<property file="build.properties"/>

<!--	<import file="${file.build.commons}"/> -->

	<!-- the server libs for all configurations -->
	<path id="id.cxflibs">
		<fileset dir="libCxf">
			<include name="**/*.jar" />
		</fileset>
	</path>

	<!-- Lib-Pfad als Referenz -->
	<path id="id.lib.path">
		<fileset dir="${dir.lib}">
			<include name="**/aspectjweaver.jar"/>
			<include name="**/jackson-all-1.9.11.jar" />
			<include name="**/modelmapper-0.6.2.jar" />
		</fileset>
		<fileset dir="${dir.client}/deploy/">
				<include name="**/lpclientpc.jar" />
		</fileset>		
	</path>

	<path id="enunciate.classpath">
		<fileset dir="${dir.enunciate}/lib">
			<include name="*.jar"/>
		</fileset>
		<!--include (optional) spring module-->
		<fileset dir="${dir.enunciate}/lib/modules/spring">
			<include name="*.jar"/>
		</fileset>
		<fileset dir="${java.home}">
			<include name="lib/tools.jar"/>
		</fileset>

		<fileset dir="libCxf">
			<include name="**/*.jar" />
		</fileset>

		<fileset dir="lib">
			<include name="**/aspectjweaver.jar" />
			<include name="**/modelmapper-0.6.2.jar" />
		</fileset>

		<fileset dir="${dir.client}/deploy/">
			<include name="**/lpclientpc.jar" />
		</fileset>
	</path>

	<taskdef name="enunciate" classname="org.codehaus.enunciate.main.EnunciateTask">
		<classpath refid="enunciate.classpath"/>
	</taskdef>


	<target name="clean" description="Alle Build-Verzeichnisse (classes) loeschen.">
		<delete dir="${dir.classes}"/>
		<delete dir="${dir.logs}"/>
		<delete dir="${dir.doc}"/>
		<delete dir="${dir.deploy}"/>
		<delete dir="${dir.temp}"/>
	</target>


	<target name="init"  description="Ausgabe-Verzeichnisse erstellen">
		<mkdir dir="${dir.log}"/>
		<echo file="${file.changes.shown}" message=" " />
		<mkdir dir="${dir.classes}"/>
		<mkdir dir="${dir.doc}"/>
		<mkdir dir="${dir.deploy}"/>
		<mkdir dir="${dir.deploy}/tomcat"/>
		<mkdir dir="${dir.deploy}/tomcat/lib"/>
		<mkdir dir="${dir.temp}"/>
	</target>

	<target  name="compile" depends="init" description="compile the restapi.">
		<echo message="compile the restapi."/>
		<echo>JAVA_HOME: ${env.JAVA_HOME}</echo>

		<javac includeantruntime="false"
    destdir="${dir.classes}"
    includes="**/*.java"
    debug="true"
    executable="${env.JAVA_HOME}/bin/javac"
    deprecation="false"
    compiler="modern"
    failonerror="true"
    memorymaximumsize="256M"
    fork="true">

			<src path="${dir.src}"/>
			<classpath refid="id.lib.path"/>
			<classpath refid="id.cxflibs"/>
			<classpath location="${dir.server.classes}"/>
		</javac>
	</target>

	<target name="webdoc" depends="compile" >
		<enunciate verbose="true" basedir="${dir.src}" configfile="enunciate.xml">
			<include name="**/*.java"/>
			<classpath refid="enunciate.classpath"/>
<!-- Doku mit in enunciate.xml eingestellten Clients
				<export artifactId="war.file" destination="${dir.deploy}/restapi-doc.war"/> 
 -->

<!-- nur die Doku
 -->		
				<export artifactId="docs" destination="${dir.deploy}/restapi-doc.war"/>
			<javacArgument argument="-g"/>
			<javacArgument argument="-source"/>
			<javacArgument argument="1.7" />
			<javacArgument argument="-target"/>
			<javacArgument argument="1.7" />
		</enunciate>
	</target>

	<target name="build" depends="clean,compile">
		<!-- das im lpclientpc.jar enthaltene log4.xml entfernen -->
		<delete file="lib/lpclientpc.jar" />
		<jar destfile="lib/lpclientpc.jar">
			<zipfileset src="${dir.client}/deploy/lpclientpc.jar" excludes="**/log4j.xml"/>
		</jar>
		
		<war destfile="${dir.deploy}/restapi.war" webxml="WebContent/WEB-INF/web.xml">
			<classes dir="${dir.classes}">
				<include name="**/*.class" />
			</classes>

			<classes dir="${dir.src}">
				<include name="**/*.properties" />
			</classes>
			
			<webinf dir="WebContent/WEB-INF">
				<include name="**/*.xml" />
			</webinf>

			<lib dir="libCxf">
				<include name="**/*.jar" />
			</lib>

			<lib dir="lib">
				<include name="**/jackson-all-1.9.11.jar" />
				<include name="**/modelmapper-0.6.2.jar" />
				<include name="**/lpclientpc.jar" />
				<include name="**/log4j-1.2.17.jar" />
				<include name="**/aspectjweaver.jar"/>
				<include name="**/ejb3-persistence.jar"/>
				<include name="**/jbossall-client.jar"/>
				<include name="**/jasperreports-5.5.0.jar"/>
				<include name="**/iText-2.1.7.js2.jar" />
			</lib>

			<lib dir="${dir.server.dir}/jboss/all/server/helium/lib/">				
				<include name="**/jai_codec.jar" />
				<include name="**/jai_core.jar" />
			</lib>
		</war>
		
		<copy todir="${dir.deploy}/tomcat/lib">
			<flattenmapper />
			<fileset dir="lib">
				<include name="**/aspectjweaver.jar" />
				<include name="**/jcr-1.0.jar" />
				<include name="**/commons-digester-1.7.jar" />
			</fileset>
			
			<fileset dir="${dir.client}/deploy/">
				<include name="**/lpclientpc.jar" />
			</fileset>
			
			<fileset dir="${dir.client}/lib/jasperreports">
				<include name="**jasperreports-5.5.0.jar" />
			</fileset>
			
			<fileset dir="${dir.server.dir}/jboss/all/server/helium/lib/">
				<include name="**/jbossall-client.jar" />
				<include name="**/ejb3-persistence.jar" />
				<include name="**/jai_codec.jar" />
				<include name="**/jai_core.jar" />
			</fileset>
		</copy>
		
<!--		<copy file="WebContent/tomcat/conf/Catalina/localhost/restapi.xml" todir="${dir.deploy}/tomcat" verbose="true"/> -->
		
		<copy todir="${dir.deploy}/tomcat" includeEmptyDirs="true" verbose="true" flatten="false" overwrite="true">
			<fileset dir="TomcatContent/tomcat"/>
		</copy>

		<copy todir="${dir.deploy}" includeEmptyDirs="true" verbose="true" flatten="true" overwrite="true">
			<fileset dir="WebContent">
				<include name="ROOT.war" />
			</fileset>
		</copy>
			
		<!-- ein kleiner check, ob alle benoetigten files vorhanden sind. -->
		<antcall target="webdoc" />		
	</target>
	
	<target name="deploy" depends="build"
		description="Kopiert den mittels 'install' erstellten Webstart Client ins endgültige Deploy-Verzeichnis">
		<fail unless="deploydir" message="deploydir not set. cannot proceed!"/>

		<var name="dir.deploy.restapi" value="${deploydir}/restapi/deploy/"/>

		<delete dir="${dir.deploy.restapi}"/>
		<mkdir dir="${dir.deploy.restapi}"/>

		<copy todir="${dir.deploy.restapi}">
			<fileset dir="${dir.deploy}">
				<include name="**/*"/>
			</fileset>
		</copy>
	</target>
		
</project>
