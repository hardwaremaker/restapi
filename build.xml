<!-- Build file fuer das lpclientpc - Projekt -->
<!-- Wer Wann Was -->
<!-- ====|==========|================================================================= -->
<!-- HK    09.11.06   compile deprecated compile.client, rescopy depr. -> rescopy2 -->
<!-- HK    03.11.06   lpserver compile mit 256M versehen -->
<!-- HK    17.01.06   javadoc mit 256M versehen -->
<!-- JO    04.08.05   cvs tags rausgenommen -->
<!-- AD	11.02.13	git anpassung -->
<project name="restapi" basedir="." default="compile">

	<property environment="env"/>
	<property file="build.properties.local"/>
	<property file="build.properties"/>

	<import file="${file.build.commons}"/>

	<!-- the server libs for all configurations -->
	<path id="id.cxflibs">
		<fileset dir="${dir.cxflib}">
			<include name="**/*.jar" />
		</fileset>

		<fileset dir="${dir.aspectjlib}">
			<include name="**/aspect*.jar" />
		</fileset>
		
		<fileset dir="${dir.tomcatlib}">			
			<include name="**/annotations-*.jar" />
		</fileset>
	</path>

	<!-- Lib-Pfad als Referenz -->
	<path id="id.lib.path">
		<fileset dir="${dir.lib}">
			<include name="**/*.jar"/>
		</fileset>
	</path>

	<path id="enunciate.classpath">
		<fileset dir="${enunciate.home}/lib">
			<include name="*.jar"/>
		</fileset>
		<!--include (optional) spring module-->
		<fileset dir="${enunciate.home}/lib/modules/spring">
			<include name="*.jar"/>
		</fileset>
		<fileset dir="${java.home}">
			<include name="lib/tools.jar"/>
		</fileset>

		<fileset dir="${dir.cxflib}">
			<include name="**/*.jar" />
		</fileset>

		<fileset dir="${dir.aspectjlib}">
			<include name="**/aspect*.jar" />
		</fileset>
		
		<fileset dir="${dir.tomcatlib}">			
			<include name="**/annotations-*.jar" />
		</fileset>

		<fileset dir="${dir.client}/deploy/">
			<include name="**/lpclientpc.jar" />
		</fileset>
	</path>

	<taskdef name="enunciate" classname="org.codehaus.enunciate.main.EnunciateTask">
		<classpath refid="enunciate.classpath"/>
	</taskdef>


	<target name="clean" description="Alle Build-Verzeichnisse (classes) loeschen.">
		<delete dir="${dir.classes}"/>
		<delete dir="${dir.logs}"/>
		<delete dir="${dir.doc}"/>
		<delete dir="${dir.deploy}"/>
		<delete dir="${dir.temp}"/>
	</target>


	<target name="init"  description="Ausgabe-Verzeichnisse erstellen">
		<mkdir dir="${dir.log}"/>
		<echo file="${file.changes.shown}" message=" " />
		<mkdir dir="${dir.classes}"/>
		<mkdir dir="${dir.doc}"/>
		<mkdir dir="${dir.deploy}"/>
		<mkdir dir="${dir.temp}"/>
	</target>

	<target  name="compile" depends="init" description="compile the restapi.">
		<echo message="compile the restapi."/>
		<echo>JAVA_HOME: ${env.JAVA_HOME}</echo>

		<javac
    destdir="${dir.classes}"
    includes="**/*.java"
    debug="true"
    executable="${env.JAVA_HOME}/bin/javac"
    deprecation="false"
    compiler="modern"
    failonerror="true"
    memorymaximumsize="256M"
    fork="true">

			<src path="${dir.src}"/>
			<classpath refid="id.lib.path"/>
			<classpath refid="id.cxflibs"/>
			<classpath location="${dir.server.classes}"/>
		</javac>
	</target>

	<target name="webdoc" depends="compile" >
		<enunciate basedir="${dir.src}">
			<include name="**/*.java"/>
			<classpath refid="enunciate.classpath"/>
			<!--	<export artifactId="war.file" destination="${tomcat.home}/webapps/myapp.war"/>  -->
			<export artifactId="war.file" destination="${dir.deploy}/restapi-doc.war"/>
			<javacArgument argument="-g"/>
		</enunciate>
	</target>

	<target name="deploy" depends="clean,compile">
		<war destfile="${dir.deploy}/restapi.war" webxml="WebContent/WEB-INF/web.xml">
			<classes dir="${dir.classes}">
				<include name="**/*.class" />
			</classes>
			<webinf dir="WebContent/WEB-INF">
				<include name="**/*.xml" />
			</webinf>

			<lib dir="${dir.cxflib}">
			</lib>
<!--			
			<lib dir="${dir.aspectjlib}">
				<include name="**/aspect*.jar" />
			</lib>
			<lib dir="${dir.client}/deploy/">
				<include name="**/lpclientpc.jar" />
			</lib>
  -->				
		</war>
	</target>

	<!-- jar-file erzeugen -->
	<target name="pack" depends="compile" unless="is.setup" >
		<basename property="name.dir.lib" file="${dir.lib}"/>

		<pathconvert property="manifest.classpath" pathsep=" " >
			<mapper>
				<chainedmapper>
					<flattenmapper />
					<globmapper from="*" to="lib/*" />
				</chainedmapper>
			</mapper>
			<path>
				<fileset dir="${basedir}">
					<include name="**/*.jar" />
				</fileset>
			</path>
		</pathconvert>
		<!-- AD -->

		<echo message="AD manifest.classpath: ${manifest.classpath}"/>
		<jar destfile="${dir.deploy}/${file.application.basename}.jar">
			<fileset dir="${dir.classes}"/>
			<fileset dir="${dir.server.classes}">
				<include name="**/lp/util/**"/>
				<include name="**/lp/server/util/**"/>
				<include name="**/service/**"/>
				<include name="**/ejb/*PK.*"/>
				<include name="**/fastlanereader/generated/service/**"/>
				<!-- ###ToDo: hier sollte vielleicht nicht alles rein! klaeren! -->
			</fileset>

			<manifest>
				<attribute name="Built-By" value="${user.name}"/>
				<attribute name="Main-Class" value="${class.main.class}"/>
				<attribute name="Class-Path" value="${manifest.classpath}"/>
			</manifest>
		</jar>

		<!-- libs kopieren, damit das jar mit dem angegebenen classpath -->
		<!-- auch aufrufbar bleibt. -->
		<!-- AD
  	<copy todir="${dir.deploy}">
      <fileset dir=".">
        <include name="${dir.lib}/**"/>
      </fileset>
    </copy>
-->
		<copy todir="${dir.deploy}/lib">
			<flattenmapper />
			<fileset dir=".">
				<include name="${dir.lib}/**"/>
				<exclude name="${dir.lib}/linux/**"/>
				<exclude name="${dir.lib}/mac/**"/>
				<exclude name="${dir.lib}/windows/**"/>
			</fileset>
		</copy>
		<copy todir="${dir.deploy}">
			<fileset dir=".">
				<include name="${dir.lib}/linux/**"/>
				<include name="${dir.lib}/mac/**"/>
				<include name="${dir.lib}/windows/**"/>
			</fileset>
		</copy>

	</target>
</project>
